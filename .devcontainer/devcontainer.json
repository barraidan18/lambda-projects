{
    "name": "AWS Lambda/CDK Development",
    // BEFORE: "image": "mcr.microsoft.com/devcontainers/universal:latest",
    // AFTER: Use a specific Python image version that matches your needs
    "image": "mcr.microsoft.com/devcontainers/python:0-3.11", // Example: Python 3.11
    // You can choose other versions:
    // "image": "mcr.microsoft.com/devcontainers/python:0-3.10",
    // "image": "mcr.microsoft.com/devcontainers/python:0-3.11",
    // "image": "mcr.microsoft.com/devcontainers/python:0-3.12", // if you need latest

    "features": {
        // Keep Node.js and npm for TypeScript and AWS CDK
        "ghcr.io/devcontainers/features/node:1": {
            "version": "latest" // Or a specific version like "18", "20"
        },
        // Keep the AWS CLI
        "ghcr.io/devcontainers/features/aws-cli:1": {
            "version": "latest"
        }
        // Remove the explicit "ghcr.io/devcontainers/features/python:1" feature
        // if you are using a python-specific base image, as it's redundant.
        // If you still wanted to use the universal image, then you'd need to ensure
        // build dependencies for SSL are present, which is harder.
    },

    "customizations": {
        "vscode": {
            "settings": {
                "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python", // Point to the venv created by postCreateCommand
                "python.terminal.activateEnvironment": true,
                "terminal.integrated.defaultProfile.linux": "bash"
            },
            "extensions": [
                "ms-python.python",
                "ms-azuretools.vscode-docker",
                "AmazonWebServices.aws-toolkit"
            ]
        }
    },

    // Commands to run after the container is created and your project code is copied.
    "postCreateCommand": {
        "create_venv": "python3 -m venv .venv",
        "activate_venv": "source .venv/bin/activate", // This doesn't persist across terminal restarts but runs the commands that follow in the venv
        "install_cdk": "npm install -g aws-cdk",
        "install_typescript": "npm install -g typescript",
        // IMPORTANT: Now correctly point to src/requirements.txt
        "install_python_deps": ".venv/bin/pip install -r src/requirements.txt" // Explicitly use pip from the venv
    },

    "forwardPorts": []
}